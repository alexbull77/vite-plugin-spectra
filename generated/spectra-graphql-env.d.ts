/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'Boolean': unknown;
    'Float': unknown;
    'Float_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'Float_comparison_exp'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; }; defaultValue: null }]; };
    'Int': unknown;
    'Int_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; }; defaultValue: null }]; };
    'String': unknown;
    'String_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_ilike'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: '_iregex'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_like'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nilike'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: '_niregex'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nlike'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nregex'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nsimilar'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_regex'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_similar'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'cpu_metrics': { kind: 'OBJECT'; name: 'cpu_metrics'; fields: { 'estimated_load_ms': { name: 'estimated_load_ms'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'microfrontend_id': { name: 'microfrontend_id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'recorded_at': { name: 'recorded_at'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; } }; 'session_id': { name: 'session_id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; }; };
    'cpu_metrics_aggregate': { kind: 'OBJECT'; name: 'cpu_metrics_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'cpu_metrics_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'cpu_metrics'; ofType: null; }; }; }; } }; }; };
    'cpu_metrics_aggregate_fields': { kind: 'OBJECT'; name: 'cpu_metrics_aggregate_fields'; fields: { 'avg': { name: 'avg'; type: { kind: 'OBJECT'; name: 'cpu_metrics_avg_fields'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'cpu_metrics_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'cpu_metrics_min_fields'; ofType: null; } }; 'stddev': { name: 'stddev'; type: { kind: 'OBJECT'; name: 'cpu_metrics_stddev_fields'; ofType: null; } }; 'stddev_pop': { name: 'stddev_pop'; type: { kind: 'OBJECT'; name: 'cpu_metrics_stddev_pop_fields'; ofType: null; } }; 'stddev_samp': { name: 'stddev_samp'; type: { kind: 'OBJECT'; name: 'cpu_metrics_stddev_samp_fields'; ofType: null; } }; 'sum': { name: 'sum'; type: { kind: 'OBJECT'; name: 'cpu_metrics_sum_fields'; ofType: null; } }; 'var_pop': { name: 'var_pop'; type: { kind: 'OBJECT'; name: 'cpu_metrics_var_pop_fields'; ofType: null; } }; 'var_samp': { name: 'var_samp'; type: { kind: 'OBJECT'; name: 'cpu_metrics_var_samp_fields'; ofType: null; } }; 'variance': { name: 'variance'; type: { kind: 'OBJECT'; name: 'cpu_metrics_variance_fields'; ofType: null; } }; }; };
    'cpu_metrics_avg_fields': { kind: 'OBJECT'; name: 'cpu_metrics_avg_fields'; fields: { 'estimated_load_ms': { name: 'estimated_load_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'cpu_metrics_bool_exp': { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'estimated_load_ms'; type: { kind: 'INPUT_OBJECT'; name: 'Float_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'microfrontend_id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'INPUT_OBJECT'; name: 'timestamptz_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'cpu_metrics_constraint': { name: 'cpu_metrics_constraint'; enumValues: 'cpu_metrics_pkey'; };
    'cpu_metrics_inc_input': { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_inc_input'; isOneOf: false; inputFields: [{ name: 'estimated_load_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }]; };
    'cpu_metrics_insert_input': { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_insert_input'; isOneOf: false; inputFields: [{ name: 'estimated_load_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'microfrontend_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }]; };
    'cpu_metrics_max_fields': { kind: 'OBJECT'; name: 'cpu_metrics_max_fields'; fields: { 'estimated_load_ms': { name: 'estimated_load_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'microfrontend_id': { name: 'microfrontend_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'recorded_at': { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'session_id': { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; }; };
    'cpu_metrics_min_fields': { kind: 'OBJECT'; name: 'cpu_metrics_min_fields'; fields: { 'estimated_load_ms': { name: 'estimated_load_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'microfrontend_id': { name: 'microfrontend_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'recorded_at': { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'session_id': { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; }; };
    'cpu_metrics_mutation_response': { kind: 'OBJECT'; name: 'cpu_metrics_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'cpu_metrics'; ofType: null; }; }; }; } }; }; };
    'cpu_metrics_on_conflict': { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'cpu_metrics_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'cpu_metrics_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'cpu_metrics_order_by': { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_order_by'; isOneOf: false; inputFields: [{ name: 'estimated_load_ms'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'microfrontend_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'cpu_metrics_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; }; defaultValue: null }]; };
    'cpu_metrics_select_column': { name: 'cpu_metrics_select_column'; enumValues: 'estimated_load_ms' | 'id' | 'microfrontend_id' | 'recorded_at' | 'session_id'; };
    'cpu_metrics_set_input': { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_set_input'; isOneOf: false; inputFields: [{ name: 'estimated_load_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'microfrontend_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }]; };
    'cpu_metrics_stddev_fields': { kind: 'OBJECT'; name: 'cpu_metrics_stddev_fields'; fields: { 'estimated_load_ms': { name: 'estimated_load_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'cpu_metrics_stddev_pop_fields': { kind: 'OBJECT'; name: 'cpu_metrics_stddev_pop_fields'; fields: { 'estimated_load_ms': { name: 'estimated_load_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'cpu_metrics_stddev_samp_fields': { kind: 'OBJECT'; name: 'cpu_metrics_stddev_samp_fields'; fields: { 'estimated_load_ms': { name: 'estimated_load_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'cpu_metrics_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'cpu_metrics_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'estimated_load_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'microfrontend_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }]; };
    'cpu_metrics_sum_fields': { kind: 'OBJECT'; name: 'cpu_metrics_sum_fields'; fields: { 'estimated_load_ms': { name: 'estimated_load_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'cpu_metrics_update_column': { name: 'cpu_metrics_update_column'; enumValues: 'estimated_load_ms' | 'id' | 'microfrontend_id' | 'recorded_at' | 'session_id'; };
    'cpu_metrics_updates': { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_updates'; isOneOf: false; inputFields: [{ name: '_inc'; type: { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_inc_input'; ofType: null; }; defaultValue: null }, { name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'cpu_metrics_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'cpu_metrics_var_pop_fields': { kind: 'OBJECT'; name: 'cpu_metrics_var_pop_fields'; fields: { 'estimated_load_ms': { name: 'estimated_load_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'cpu_metrics_var_samp_fields': { kind: 'OBJECT'; name: 'cpu_metrics_var_samp_fields'; fields: { 'estimated_load_ms': { name: 'estimated_load_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'cpu_metrics_variance_fields': { kind: 'OBJECT'; name: 'cpu_metrics_variance_fields'; fields: { 'estimated_load_ms': { name: 'estimated_load_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'cursor_ordering': { name: 'cursor_ordering'; enumValues: 'ASC' | 'DESC'; };
    'errors': { kind: 'OBJECT'; name: 'errors'; fields: { 'created_at': { name: 'created_at'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'level': { name: 'level'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'meta': { name: 'meta'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; } }; 'microfrontend_id': { name: 'microfrontend_id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; }; };
    'errors_aggregate': { kind: 'OBJECT'; name: 'errors_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'errors_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'errors'; ofType: null; }; }; }; } }; }; };
    'errors_aggregate_fields': { kind: 'OBJECT'; name: 'errors_aggregate_fields'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'errors_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'errors_min_fields'; ofType: null; } }; }; };
    'errors_append_input': { kind: 'INPUT_OBJECT'; name: 'errors_append_input'; isOneOf: false; inputFields: [{ name: 'meta'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }]; };
    'errors_bool_exp': { kind: 'INPUT_OBJECT'; name: 'errors_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'errors_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'errors_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'errors_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'created_at'; type: { kind: 'INPUT_OBJECT'; name: 'timestamptz_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'level'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'message'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'meta'; type: { kind: 'INPUT_OBJECT'; name: 'jsonb_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'microfrontend_id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'errors_constraint': { name: 'errors_constraint'; enumValues: 'errors_pkey'; };
    'errors_delete_at_path_input': { kind: 'INPUT_OBJECT'; name: 'errors_delete_at_path_input'; isOneOf: false; inputFields: [{ name: 'meta'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'errors_delete_elem_input': { kind: 'INPUT_OBJECT'; name: 'errors_delete_elem_input'; isOneOf: false; inputFields: [{ name: 'meta'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'errors_delete_key_input': { kind: 'INPUT_OBJECT'; name: 'errors_delete_key_input'; isOneOf: false; inputFields: [{ name: 'meta'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'errors_insert_input': { kind: 'INPUT_OBJECT'; name: 'errors_insert_input'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'level'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'meta'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'microfrontend_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }]; };
    'errors_max_fields': { kind: 'OBJECT'; name: 'errors_max_fields'; fields: { 'created_at': { name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'level': { name: 'level'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'microfrontend_id': { name: 'microfrontend_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; }; };
    'errors_min_fields': { kind: 'OBJECT'; name: 'errors_min_fields'; fields: { 'created_at': { name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'level': { name: 'level'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'microfrontend_id': { name: 'microfrontend_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; }; };
    'errors_mutation_response': { kind: 'OBJECT'; name: 'errors_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'errors'; ofType: null; }; }; }; } }; }; };
    'errors_on_conflict': { kind: 'INPUT_OBJECT'; name: 'errors_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'errors_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'errors_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'errors_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'errors_order_by': { kind: 'INPUT_OBJECT'; name: 'errors_order_by'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'level'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'message'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'meta'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'microfrontend_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'errors_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'errors_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; }; defaultValue: null }]; };
    'errors_prepend_input': { kind: 'INPUT_OBJECT'; name: 'errors_prepend_input'; isOneOf: false; inputFields: [{ name: 'meta'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }]; };
    'errors_select_column': { name: 'errors_select_column'; enumValues: 'created_at' | 'id' | 'level' | 'message' | 'meta' | 'microfrontend_id'; };
    'errors_set_input': { kind: 'INPUT_OBJECT'; name: 'errors_set_input'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'level'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'meta'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'microfrontend_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }]; };
    'errors_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'errors_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'errors_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'errors_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'errors_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'level'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'meta'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'microfrontend_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }]; };
    'errors_update_column': { name: 'errors_update_column'; enumValues: 'created_at' | 'id' | 'level' | 'message' | 'meta' | 'microfrontend_id'; };
    'errors_updates': { kind: 'INPUT_OBJECT'; name: 'errors_updates'; isOneOf: false; inputFields: [{ name: '_append'; type: { kind: 'INPUT_OBJECT'; name: 'errors_append_input'; ofType: null; }; defaultValue: null }, { name: '_delete_at_path'; type: { kind: 'INPUT_OBJECT'; name: 'errors_delete_at_path_input'; ofType: null; }; defaultValue: null }, { name: '_delete_elem'; type: { kind: 'INPUT_OBJECT'; name: 'errors_delete_elem_input'; ofType: null; }; defaultValue: null }, { name: '_delete_key'; type: { kind: 'INPUT_OBJECT'; name: 'errors_delete_key_input'; ofType: null; }; defaultValue: null }, { name: '_prepend'; type: { kind: 'INPUT_OBJECT'; name: 'errors_prepend_input'; ofType: null; }; defaultValue: null }, { name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'errors_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'errors_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'event_loop_logs': { kind: 'OBJECT'; name: 'event_loop_logs'; fields: { 'duration_ms': { name: 'duration_ms'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'recorded_at': { name: 'recorded_at'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; } }; 'session_id': { name: 'session_id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'event_loop_logs_aggregate': { kind: 'OBJECT'; name: 'event_loop_logs_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'event_loop_logs_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'event_loop_logs'; ofType: null; }; }; }; } }; }; };
    'event_loop_logs_aggregate_fields': { kind: 'OBJECT'; name: 'event_loop_logs_aggregate_fields'; fields: { 'avg': { name: 'avg'; type: { kind: 'OBJECT'; name: 'event_loop_logs_avg_fields'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'event_loop_logs_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'event_loop_logs_min_fields'; ofType: null; } }; 'stddev': { name: 'stddev'; type: { kind: 'OBJECT'; name: 'event_loop_logs_stddev_fields'; ofType: null; } }; 'stddev_pop': { name: 'stddev_pop'; type: { kind: 'OBJECT'; name: 'event_loop_logs_stddev_pop_fields'; ofType: null; } }; 'stddev_samp': { name: 'stddev_samp'; type: { kind: 'OBJECT'; name: 'event_loop_logs_stddev_samp_fields'; ofType: null; } }; 'sum': { name: 'sum'; type: { kind: 'OBJECT'; name: 'event_loop_logs_sum_fields'; ofType: null; } }; 'var_pop': { name: 'var_pop'; type: { kind: 'OBJECT'; name: 'event_loop_logs_var_pop_fields'; ofType: null; } }; 'var_samp': { name: 'var_samp'; type: { kind: 'OBJECT'; name: 'event_loop_logs_var_samp_fields'; ofType: null; } }; 'variance': { name: 'variance'; type: { kind: 'OBJECT'; name: 'event_loop_logs_variance_fields'; ofType: null; } }; }; };
    'event_loop_logs_avg_fields': { kind: 'OBJECT'; name: 'event_loop_logs_avg_fields'; fields: { 'duration_ms': { name: 'duration_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'event_loop_logs_bool_exp': { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'duration_ms'; type: { kind: 'INPUT_OBJECT'; name: 'Float_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'INPUT_OBJECT'; name: 'timestamptz_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'event_loop_logs_constraint': { name: 'event_loop_logs_constraint'; enumValues: 'event_loop_logs_pkey'; };
    'event_loop_logs_inc_input': { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_inc_input'; isOneOf: false; inputFields: [{ name: 'duration_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }]; };
    'event_loop_logs_insert_input': { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_insert_input'; isOneOf: false; inputFields: [{ name: 'duration_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'event_loop_logs_max_fields': { kind: 'OBJECT'; name: 'event_loop_logs_max_fields'; fields: { 'duration_ms': { name: 'duration_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'recorded_at': { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'session_id': { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'event_loop_logs_min_fields': { kind: 'OBJECT'; name: 'event_loop_logs_min_fields'; fields: { 'duration_ms': { name: 'duration_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'recorded_at': { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'session_id': { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'event_loop_logs_mutation_response': { kind: 'OBJECT'; name: 'event_loop_logs_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'event_loop_logs'; ofType: null; }; }; }; } }; }; };
    'event_loop_logs_on_conflict': { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'event_loop_logs_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'event_loop_logs_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'event_loop_logs_order_by': { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_order_by'; isOneOf: false; inputFields: [{ name: 'duration_ms'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'event_loop_logs_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; }; defaultValue: null }]; };
    'event_loop_logs_select_column': { name: 'event_loop_logs_select_column'; enumValues: 'duration_ms' | 'id' | 'recorded_at' | 'session_id' | 'type'; };
    'event_loop_logs_set_input': { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_set_input'; isOneOf: false; inputFields: [{ name: 'duration_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'event_loop_logs_stddev_fields': { kind: 'OBJECT'; name: 'event_loop_logs_stddev_fields'; fields: { 'duration_ms': { name: 'duration_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'event_loop_logs_stddev_pop_fields': { kind: 'OBJECT'; name: 'event_loop_logs_stddev_pop_fields'; fields: { 'duration_ms': { name: 'duration_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'event_loop_logs_stddev_samp_fields': { kind: 'OBJECT'; name: 'event_loop_logs_stddev_samp_fields'; fields: { 'duration_ms': { name: 'duration_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'event_loop_logs_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'event_loop_logs_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'duration_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'event_loop_logs_sum_fields': { kind: 'OBJECT'; name: 'event_loop_logs_sum_fields'; fields: { 'duration_ms': { name: 'duration_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'event_loop_logs_update_column': { name: 'event_loop_logs_update_column'; enumValues: 'duration_ms' | 'id' | 'recorded_at' | 'session_id' | 'type'; };
    'event_loop_logs_updates': { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_updates'; isOneOf: false; inputFields: [{ name: '_inc'; type: { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_inc_input'; ofType: null; }; defaultValue: null }, { name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'event_loop_logs_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'event_loop_logs_var_pop_fields': { kind: 'OBJECT'; name: 'event_loop_logs_var_pop_fields'; fields: { 'duration_ms': { name: 'duration_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'event_loop_logs_var_samp_fields': { kind: 'OBJECT'; name: 'event_loop_logs_var_samp_fields'; fields: { 'duration_ms': { name: 'duration_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'event_loop_logs_variance_fields': { kind: 'OBJECT'; name: 'event_loop_logs_variance_fields'; fields: { 'duration_ms': { name: 'duration_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'fps_logs': { kind: 'OBJECT'; name: 'fps_logs'; fields: { 'fps': { name: 'fps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'recorded_at': { name: 'recorded_at'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; } }; 'session_id': { name: 'session_id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; }; };
    'fps_logs_aggregate': { kind: 'OBJECT'; name: 'fps_logs_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'fps_logs_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'fps_logs'; ofType: null; }; }; }; } }; }; };
    'fps_logs_aggregate_fields': { kind: 'OBJECT'; name: 'fps_logs_aggregate_fields'; fields: { 'avg': { name: 'avg'; type: { kind: 'OBJECT'; name: 'fps_logs_avg_fields'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'fps_logs_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'fps_logs_min_fields'; ofType: null; } }; 'stddev': { name: 'stddev'; type: { kind: 'OBJECT'; name: 'fps_logs_stddev_fields'; ofType: null; } }; 'stddev_pop': { name: 'stddev_pop'; type: { kind: 'OBJECT'; name: 'fps_logs_stddev_pop_fields'; ofType: null; } }; 'stddev_samp': { name: 'stddev_samp'; type: { kind: 'OBJECT'; name: 'fps_logs_stddev_samp_fields'; ofType: null; } }; 'sum': { name: 'sum'; type: { kind: 'OBJECT'; name: 'fps_logs_sum_fields'; ofType: null; } }; 'var_pop': { name: 'var_pop'; type: { kind: 'OBJECT'; name: 'fps_logs_var_pop_fields'; ofType: null; } }; 'var_samp': { name: 'var_samp'; type: { kind: 'OBJECT'; name: 'fps_logs_var_samp_fields'; ofType: null; } }; 'variance': { name: 'variance'; type: { kind: 'OBJECT'; name: 'fps_logs_variance_fields'; ofType: null; } }; }; };
    'fps_logs_avg_fields': { kind: 'OBJECT'; name: 'fps_logs_avg_fields'; fields: { 'fps': { name: 'fps'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'fps_logs_bool_exp': { kind: 'INPUT_OBJECT'; name: 'fps_logs_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'fps_logs_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'fps_logs_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'fps_logs_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'fps'; type: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'INPUT_OBJECT'; name: 'timestamptz_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'fps_logs_constraint': { name: 'fps_logs_constraint'; enumValues: 'performance_snapshots_pkey'; };
    'fps_logs_inc_input': { kind: 'INPUT_OBJECT'; name: 'fps_logs_inc_input'; isOneOf: false; inputFields: [{ name: 'fps'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'fps_logs_insert_input': { kind: 'INPUT_OBJECT'; name: 'fps_logs_insert_input'; isOneOf: false; inputFields: [{ name: 'fps'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }]; };
    'fps_logs_max_fields': { kind: 'OBJECT'; name: 'fps_logs_max_fields'; fields: { 'fps': { name: 'fps'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'recorded_at': { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'session_id': { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; }; };
    'fps_logs_min_fields': { kind: 'OBJECT'; name: 'fps_logs_min_fields'; fields: { 'fps': { name: 'fps'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'recorded_at': { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'session_id': { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; }; };
    'fps_logs_mutation_response': { kind: 'OBJECT'; name: 'fps_logs_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'fps_logs'; ofType: null; }; }; }; } }; }; };
    'fps_logs_on_conflict': { kind: 'INPUT_OBJECT'; name: 'fps_logs_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'fps_logs_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'fps_logs_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'fps_logs_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'fps_logs_order_by': { kind: 'INPUT_OBJECT'; name: 'fps_logs_order_by'; isOneOf: false; inputFields: [{ name: 'fps'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'fps_logs_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'fps_logs_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; }; defaultValue: null }]; };
    'fps_logs_select_column': { name: 'fps_logs_select_column'; enumValues: 'fps' | 'id' | 'recorded_at' | 'session_id'; };
    'fps_logs_set_input': { kind: 'INPUT_OBJECT'; name: 'fps_logs_set_input'; isOneOf: false; inputFields: [{ name: 'fps'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }]; };
    'fps_logs_stddev_fields': { kind: 'OBJECT'; name: 'fps_logs_stddev_fields'; fields: { 'fps': { name: 'fps'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'fps_logs_stddev_pop_fields': { kind: 'OBJECT'; name: 'fps_logs_stddev_pop_fields'; fields: { 'fps': { name: 'fps'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'fps_logs_stddev_samp_fields': { kind: 'OBJECT'; name: 'fps_logs_stddev_samp_fields'; fields: { 'fps': { name: 'fps'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'fps_logs_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'fps_logs_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'fps_logs_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'fps_logs_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'fps_logs_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'fps'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }]; };
    'fps_logs_sum_fields': { kind: 'OBJECT'; name: 'fps_logs_sum_fields'; fields: { 'fps': { name: 'fps'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'fps_logs_update_column': { name: 'fps_logs_update_column'; enumValues: 'fps' | 'id' | 'recorded_at' | 'session_id'; };
    'fps_logs_updates': { kind: 'INPUT_OBJECT'; name: 'fps_logs_updates'; isOneOf: false; inputFields: [{ name: '_inc'; type: { kind: 'INPUT_OBJECT'; name: 'fps_logs_inc_input'; ofType: null; }; defaultValue: null }, { name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'fps_logs_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'fps_logs_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'fps_logs_var_pop_fields': { kind: 'OBJECT'; name: 'fps_logs_var_pop_fields'; fields: { 'fps': { name: 'fps'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'fps_logs_var_samp_fields': { kind: 'OBJECT'; name: 'fps_logs_var_samp_fields'; fields: { 'fps': { name: 'fps'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'fps_logs_variance_fields': { kind: 'OBJECT'; name: 'fps_logs_variance_fields'; fields: { 'fps': { name: 'fps'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'jsonb': unknown;
    'jsonb_cast_exp': { kind: 'INPUT_OBJECT'; name: 'jsonb_cast_exp'; isOneOf: false; inputFields: [{ name: 'String'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'jsonb_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'jsonb_comparison_exp'; isOneOf: false; inputFields: [{ name: '_cast'; type: { kind: 'INPUT_OBJECT'; name: 'jsonb_cast_exp'; ofType: null; }; defaultValue: null }, { name: '_contained_in'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: '_contains'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: '_eq'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: '_has_key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_has_keys_all'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: '_has_keys_any'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; }; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; }; }; defaultValue: null }]; };
    'local_storage_metrics': { kind: 'OBJECT'; name: 'local_storage_metrics'; fields: { 'average_entry_size_kb': { name: 'average_entry_size_kb'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'largest_key': { name: 'largest_key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'largest_key_size_kb': { name: 'largest_key_size_kb'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'quota_used_percentage': { name: 'quota_used_percentage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'read_ops': { name: 'read_ops'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'recorded_at': { name: 'recorded_at'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; } }; 'session_id': { name: 'session_id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'total_keys': { name: 'total_keys'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'total_size_kb': { name: 'total_size_kb'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'write_ops': { name: 'write_ops'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'local_storage_metrics_aggregate': { kind: 'OBJECT'; name: 'local_storage_metrics_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'local_storage_metrics_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'local_storage_metrics'; ofType: null; }; }; }; } }; }; };
    'local_storage_metrics_aggregate_fields': { kind: 'OBJECT'; name: 'local_storage_metrics_aggregate_fields'; fields: { 'avg': { name: 'avg'; type: { kind: 'OBJECT'; name: 'local_storage_metrics_avg_fields'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'local_storage_metrics_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'local_storage_metrics_min_fields'; ofType: null; } }; 'stddev': { name: 'stddev'; type: { kind: 'OBJECT'; name: 'local_storage_metrics_stddev_fields'; ofType: null; } }; 'stddev_pop': { name: 'stddev_pop'; type: { kind: 'OBJECT'; name: 'local_storage_metrics_stddev_pop_fields'; ofType: null; } }; 'stddev_samp': { name: 'stddev_samp'; type: { kind: 'OBJECT'; name: 'local_storage_metrics_stddev_samp_fields'; ofType: null; } }; 'sum': { name: 'sum'; type: { kind: 'OBJECT'; name: 'local_storage_metrics_sum_fields'; ofType: null; } }; 'var_pop': { name: 'var_pop'; type: { kind: 'OBJECT'; name: 'local_storage_metrics_var_pop_fields'; ofType: null; } }; 'var_samp': { name: 'var_samp'; type: { kind: 'OBJECT'; name: 'local_storage_metrics_var_samp_fields'; ofType: null; } }; 'variance': { name: 'variance'; type: { kind: 'OBJECT'; name: 'local_storage_metrics_variance_fields'; ofType: null; } }; }; };
    'local_storage_metrics_avg_fields': { kind: 'OBJECT'; name: 'local_storage_metrics_avg_fields'; fields: { 'average_entry_size_kb': { name: 'average_entry_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'largest_key_size_kb': { name: 'largest_key_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'quota_used_percentage': { name: 'quota_used_percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'read_ops': { name: 'read_ops'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'total_keys': { name: 'total_keys'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'total_size_kb': { name: 'total_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'write_ops': { name: 'write_ops'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'local_storage_metrics_bool_exp': { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'average_entry_size_kb'; type: { kind: 'INPUT_OBJECT'; name: 'Float_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'largest_key'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'largest_key_size_kb'; type: { kind: 'INPUT_OBJECT'; name: 'Float_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'quota_used_percentage'; type: { kind: 'INPUT_OBJECT'; name: 'Float_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'read_ops'; type: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'INPUT_OBJECT'; name: 'timestamptz_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'total_keys'; type: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'total_size_kb'; type: { kind: 'INPUT_OBJECT'; name: 'Float_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'write_ops'; type: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'local_storage_metrics_constraint': { name: 'local_storage_metrics_constraint'; enumValues: 'local_storage_metrics_pkey'; };
    'local_storage_metrics_inc_input': { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_inc_input'; isOneOf: false; inputFields: [{ name: 'average_entry_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'largest_key_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'quota_used_percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'read_ops'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'total_keys'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'total_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'write_ops'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'local_storage_metrics_insert_input': { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_insert_input'; isOneOf: false; inputFields: [{ name: 'average_entry_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'largest_key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'largest_key_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'quota_used_percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'read_ops'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'total_keys'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'total_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'write_ops'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'local_storage_metrics_max_fields': { kind: 'OBJECT'; name: 'local_storage_metrics_max_fields'; fields: { 'average_entry_size_kb': { name: 'average_entry_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'largest_key': { name: 'largest_key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'largest_key_size_kb': { name: 'largest_key_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'quota_used_percentage': { name: 'quota_used_percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'read_ops': { name: 'read_ops'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'recorded_at': { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'session_id': { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'total_keys': { name: 'total_keys'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'total_size_kb': { name: 'total_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'write_ops': { name: 'write_ops'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'local_storage_metrics_min_fields': { kind: 'OBJECT'; name: 'local_storage_metrics_min_fields'; fields: { 'average_entry_size_kb': { name: 'average_entry_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'largest_key': { name: 'largest_key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'largest_key_size_kb': { name: 'largest_key_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'quota_used_percentage': { name: 'quota_used_percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'read_ops': { name: 'read_ops'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'recorded_at': { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'session_id': { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'total_keys': { name: 'total_keys'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'total_size_kb': { name: 'total_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'write_ops': { name: 'write_ops'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'local_storage_metrics_mutation_response': { kind: 'OBJECT'; name: 'local_storage_metrics_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'local_storage_metrics'; ofType: null; }; }; }; } }; }; };
    'local_storage_metrics_on_conflict': { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'local_storage_metrics_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'local_storage_metrics_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'local_storage_metrics_order_by': { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_order_by'; isOneOf: false; inputFields: [{ name: 'average_entry_size_kb'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'largest_key'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'largest_key_size_kb'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'quota_used_percentage'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'read_ops'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'total_keys'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'total_size_kb'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'write_ops'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'local_storage_metrics_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; }; defaultValue: null }]; };
    'local_storage_metrics_select_column': { name: 'local_storage_metrics_select_column'; enumValues: 'average_entry_size_kb' | 'id' | 'largest_key' | 'largest_key_size_kb' | 'quota_used_percentage' | 'read_ops' | 'recorded_at' | 'session_id' | 'total_keys' | 'total_size_kb' | 'write_ops'; };
    'local_storage_metrics_set_input': { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_set_input'; isOneOf: false; inputFields: [{ name: 'average_entry_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'largest_key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'largest_key_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'quota_used_percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'read_ops'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'total_keys'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'total_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'write_ops'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'local_storage_metrics_stddev_fields': { kind: 'OBJECT'; name: 'local_storage_metrics_stddev_fields'; fields: { 'average_entry_size_kb': { name: 'average_entry_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'largest_key_size_kb': { name: 'largest_key_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'quota_used_percentage': { name: 'quota_used_percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'read_ops': { name: 'read_ops'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'total_keys': { name: 'total_keys'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'total_size_kb': { name: 'total_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'write_ops': { name: 'write_ops'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'local_storage_metrics_stddev_pop_fields': { kind: 'OBJECT'; name: 'local_storage_metrics_stddev_pop_fields'; fields: { 'average_entry_size_kb': { name: 'average_entry_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'largest_key_size_kb': { name: 'largest_key_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'quota_used_percentage': { name: 'quota_used_percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'read_ops': { name: 'read_ops'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'total_keys': { name: 'total_keys'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'total_size_kb': { name: 'total_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'write_ops': { name: 'write_ops'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'local_storage_metrics_stddev_samp_fields': { kind: 'OBJECT'; name: 'local_storage_metrics_stddev_samp_fields'; fields: { 'average_entry_size_kb': { name: 'average_entry_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'largest_key_size_kb': { name: 'largest_key_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'quota_used_percentage': { name: 'quota_used_percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'read_ops': { name: 'read_ops'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'total_keys': { name: 'total_keys'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'total_size_kb': { name: 'total_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'write_ops': { name: 'write_ops'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'local_storage_metrics_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'local_storage_metrics_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'average_entry_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'largest_key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'largest_key_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'quota_used_percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'read_ops'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'total_keys'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'total_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'write_ops'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'local_storage_metrics_sum_fields': { kind: 'OBJECT'; name: 'local_storage_metrics_sum_fields'; fields: { 'average_entry_size_kb': { name: 'average_entry_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'largest_key_size_kb': { name: 'largest_key_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'quota_used_percentage': { name: 'quota_used_percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'read_ops': { name: 'read_ops'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'total_keys': { name: 'total_keys'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'total_size_kb': { name: 'total_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'write_ops': { name: 'write_ops'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'local_storage_metrics_update_column': { name: 'local_storage_metrics_update_column'; enumValues: 'average_entry_size_kb' | 'id' | 'largest_key' | 'largest_key_size_kb' | 'quota_used_percentage' | 'read_ops' | 'recorded_at' | 'session_id' | 'total_keys' | 'total_size_kb' | 'write_ops'; };
    'local_storage_metrics_updates': { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_updates'; isOneOf: false; inputFields: [{ name: '_inc'; type: { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_inc_input'; ofType: null; }; defaultValue: null }, { name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'local_storage_metrics_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'local_storage_metrics_var_pop_fields': { kind: 'OBJECT'; name: 'local_storage_metrics_var_pop_fields'; fields: { 'average_entry_size_kb': { name: 'average_entry_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'largest_key_size_kb': { name: 'largest_key_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'quota_used_percentage': { name: 'quota_used_percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'read_ops': { name: 'read_ops'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'total_keys': { name: 'total_keys'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'total_size_kb': { name: 'total_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'write_ops': { name: 'write_ops'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'local_storage_metrics_var_samp_fields': { kind: 'OBJECT'; name: 'local_storage_metrics_var_samp_fields'; fields: { 'average_entry_size_kb': { name: 'average_entry_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'largest_key_size_kb': { name: 'largest_key_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'quota_used_percentage': { name: 'quota_used_percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'read_ops': { name: 'read_ops'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'total_keys': { name: 'total_keys'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'total_size_kb': { name: 'total_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'write_ops': { name: 'write_ops'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'local_storage_metrics_variance_fields': { kind: 'OBJECT'; name: 'local_storage_metrics_variance_fields'; fields: { 'average_entry_size_kb': { name: 'average_entry_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'largest_key_size_kb': { name: 'largest_key_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'quota_used_percentage': { name: 'quota_used_percentage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'read_ops': { name: 'read_ops'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'total_keys': { name: 'total_keys'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'total_size_kb': { name: 'total_size_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'write_ops': { name: 'write_ops'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'memory_logs': { kind: 'OBJECT'; name: 'memory_logs'; fields: { 'heap_limit': { name: 'heap_limit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'js_heap_limit_mb': { name: 'js_heap_limit_mb'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'js_heap_total_mb': { name: 'js_heap_total_mb'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'recorded_at': { name: 'recorded_at'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; } }; 'session_id': { name: 'session_id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; }; };
    'memory_logs_aggregate': { kind: 'OBJECT'; name: 'memory_logs_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'memory_logs_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'memory_logs'; ofType: null; }; }; }; } }; }; };
    'memory_logs_aggregate_fields': { kind: 'OBJECT'; name: 'memory_logs_aggregate_fields'; fields: { 'avg': { name: 'avg'; type: { kind: 'OBJECT'; name: 'memory_logs_avg_fields'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'memory_logs_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'memory_logs_min_fields'; ofType: null; } }; 'stddev': { name: 'stddev'; type: { kind: 'OBJECT'; name: 'memory_logs_stddev_fields'; ofType: null; } }; 'stddev_pop': { name: 'stddev_pop'; type: { kind: 'OBJECT'; name: 'memory_logs_stddev_pop_fields'; ofType: null; } }; 'stddev_samp': { name: 'stddev_samp'; type: { kind: 'OBJECT'; name: 'memory_logs_stddev_samp_fields'; ofType: null; } }; 'sum': { name: 'sum'; type: { kind: 'OBJECT'; name: 'memory_logs_sum_fields'; ofType: null; } }; 'var_pop': { name: 'var_pop'; type: { kind: 'OBJECT'; name: 'memory_logs_var_pop_fields'; ofType: null; } }; 'var_samp': { name: 'var_samp'; type: { kind: 'OBJECT'; name: 'memory_logs_var_samp_fields'; ofType: null; } }; 'variance': { name: 'variance'; type: { kind: 'OBJECT'; name: 'memory_logs_variance_fields'; ofType: null; } }; }; };
    'memory_logs_avg_fields': { kind: 'OBJECT'; name: 'memory_logs_avg_fields'; fields: { 'heap_limit': { name: 'heap_limit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_limit_mb': { name: 'js_heap_limit_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_total_mb': { name: 'js_heap_total_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'memory_logs_bool_exp': { kind: 'INPUT_OBJECT'; name: 'memory_logs_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'memory_logs_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'memory_logs_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'memory_logs_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'heap_limit'; type: { kind: 'INPUT_OBJECT'; name: 'Float_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'js_heap_limit_mb'; type: { kind: 'INPUT_OBJECT'; name: 'Float_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'js_heap_total_mb'; type: { kind: 'INPUT_OBJECT'; name: 'Float_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'INPUT_OBJECT'; name: 'timestamptz_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'memory_logs_constraint': { name: 'memory_logs_constraint'; enumValues: 'memory_logs_pkey'; };
    'memory_logs_inc_input': { kind: 'INPUT_OBJECT'; name: 'memory_logs_inc_input'; isOneOf: false; inputFields: [{ name: 'heap_limit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'js_heap_limit_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'js_heap_total_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }]; };
    'memory_logs_insert_input': { kind: 'INPUT_OBJECT'; name: 'memory_logs_insert_input'; isOneOf: false; inputFields: [{ name: 'heap_limit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'js_heap_limit_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'js_heap_total_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }]; };
    'memory_logs_max_fields': { kind: 'OBJECT'; name: 'memory_logs_max_fields'; fields: { 'heap_limit': { name: 'heap_limit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'js_heap_limit_mb': { name: 'js_heap_limit_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_total_mb': { name: 'js_heap_total_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'recorded_at': { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'session_id': { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; }; };
    'memory_logs_min_fields': { kind: 'OBJECT'; name: 'memory_logs_min_fields'; fields: { 'heap_limit': { name: 'heap_limit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'js_heap_limit_mb': { name: 'js_heap_limit_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_total_mb': { name: 'js_heap_total_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'recorded_at': { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'session_id': { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; }; };
    'memory_logs_mutation_response': { kind: 'OBJECT'; name: 'memory_logs_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'memory_logs'; ofType: null; }; }; }; } }; }; };
    'memory_logs_on_conflict': { kind: 'INPUT_OBJECT'; name: 'memory_logs_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'memory_logs_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'memory_logs_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'memory_logs_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'memory_logs_order_by': { kind: 'INPUT_OBJECT'; name: 'memory_logs_order_by'; isOneOf: false; inputFields: [{ name: 'heap_limit'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'js_heap_limit_mb'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'js_heap_total_mb'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'memory_logs_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'memory_logs_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; }; defaultValue: null }]; };
    'memory_logs_select_column': { name: 'memory_logs_select_column'; enumValues: 'heap_limit' | 'id' | 'js_heap_limit_mb' | 'js_heap_total_mb' | 'recorded_at' | 'session_id'; };
    'memory_logs_set_input': { kind: 'INPUT_OBJECT'; name: 'memory_logs_set_input'; isOneOf: false; inputFields: [{ name: 'heap_limit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'js_heap_limit_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'js_heap_total_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }]; };
    'memory_logs_stddev_fields': { kind: 'OBJECT'; name: 'memory_logs_stddev_fields'; fields: { 'heap_limit': { name: 'heap_limit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_limit_mb': { name: 'js_heap_limit_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_total_mb': { name: 'js_heap_total_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'memory_logs_stddev_pop_fields': { kind: 'OBJECT'; name: 'memory_logs_stddev_pop_fields'; fields: { 'heap_limit': { name: 'heap_limit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_limit_mb': { name: 'js_heap_limit_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_total_mb': { name: 'js_heap_total_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'memory_logs_stddev_samp_fields': { kind: 'OBJECT'; name: 'memory_logs_stddev_samp_fields'; fields: { 'heap_limit': { name: 'heap_limit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_limit_mb': { name: 'js_heap_limit_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_total_mb': { name: 'js_heap_total_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'memory_logs_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'memory_logs_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'memory_logs_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'memory_logs_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'memory_logs_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'heap_limit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'js_heap_limit_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'js_heap_total_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'recorded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }]; };
    'memory_logs_sum_fields': { kind: 'OBJECT'; name: 'memory_logs_sum_fields'; fields: { 'heap_limit': { name: 'heap_limit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_limit_mb': { name: 'js_heap_limit_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_total_mb': { name: 'js_heap_total_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'memory_logs_update_column': { name: 'memory_logs_update_column'; enumValues: 'heap_limit' | 'id' | 'js_heap_limit_mb' | 'js_heap_total_mb' | 'recorded_at' | 'session_id'; };
    'memory_logs_updates': { kind: 'INPUT_OBJECT'; name: 'memory_logs_updates'; isOneOf: false; inputFields: [{ name: '_inc'; type: { kind: 'INPUT_OBJECT'; name: 'memory_logs_inc_input'; ofType: null; }; defaultValue: null }, { name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'memory_logs_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'memory_logs_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'memory_logs_var_pop_fields': { kind: 'OBJECT'; name: 'memory_logs_var_pop_fields'; fields: { 'heap_limit': { name: 'heap_limit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_limit_mb': { name: 'js_heap_limit_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_total_mb': { name: 'js_heap_total_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'memory_logs_var_samp_fields': { kind: 'OBJECT'; name: 'memory_logs_var_samp_fields'; fields: { 'heap_limit': { name: 'heap_limit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_limit_mb': { name: 'js_heap_limit_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_total_mb': { name: 'js_heap_total_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'memory_logs_variance_fields': { kind: 'OBJECT'; name: 'memory_logs_variance_fields'; fields: { 'heap_limit': { name: 'heap_limit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_limit_mb': { name: 'js_heap_limit_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'js_heap_total_mb': { name: 'js_heap_total_mb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'microfrontends': { kind: 'OBJECT'; name: 'microfrontends'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'loaded_at': { name: 'loaded_at'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'session_id': { name: 'session_id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'microfrontends_aggregate': { kind: 'OBJECT'; name: 'microfrontends_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'microfrontends_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'microfrontends'; ofType: null; }; }; }; } }; }; };
    'microfrontends_aggregate_fields': { kind: 'OBJECT'; name: 'microfrontends_aggregate_fields'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'microfrontends_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'microfrontends_min_fields'; ofType: null; } }; }; };
    'microfrontends_bool_exp': { kind: 'INPUT_OBJECT'; name: 'microfrontends_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'microfrontends_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'microfrontends_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'microfrontends_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'loaded_at'; type: { kind: 'INPUT_OBJECT'; name: 'timestamptz_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'version'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'microfrontends_constraint': { name: 'microfrontends_constraint'; enumValues: 'microfrontends_name_version_key' | 'microfrontends_pkey'; };
    'microfrontends_insert_input': { kind: 'INPUT_OBJECT'; name: 'microfrontends_insert_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'loaded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'microfrontends_max_fields': { kind: 'OBJECT'; name: 'microfrontends_max_fields'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'loaded_at': { name: 'loaded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'session_id': { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'microfrontends_min_fields': { kind: 'OBJECT'; name: 'microfrontends_min_fields'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'loaded_at': { name: 'loaded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'session_id': { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'microfrontends_mutation_response': { kind: 'OBJECT'; name: 'microfrontends_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'microfrontends'; ofType: null; }; }; }; } }; }; };
    'microfrontends_on_conflict': { kind: 'INPUT_OBJECT'; name: 'microfrontends_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'microfrontends_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'microfrontends_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'microfrontends_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'microfrontends_order_by': { kind: 'INPUT_OBJECT'; name: 'microfrontends_order_by'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'loaded_at'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'version'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'microfrontends_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'microfrontends_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; }; defaultValue: null }]; };
    'microfrontends_select_column': { name: 'microfrontends_select_column'; enumValues: 'id' | 'loaded_at' | 'name' | 'session_id' | 'version'; };
    'microfrontends_set_input': { kind: 'INPUT_OBJECT'; name: 'microfrontends_set_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'loaded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'microfrontends_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'microfrontends_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'microfrontends_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'microfrontends_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'microfrontends_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'loaded_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'microfrontends_update_column': { name: 'microfrontends_update_column'; enumValues: 'id' | 'loaded_at' | 'name' | 'session_id' | 'version'; };
    'microfrontends_updates': { kind: 'INPUT_OBJECT'; name: 'microfrontends_updates'; isOneOf: false; inputFields: [{ name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'microfrontends_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'microfrontends_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'mutation_root': { kind: 'OBJECT'; name: 'mutation_root'; fields: { 'delete_cpu_metrics': { name: 'delete_cpu_metrics'; type: { kind: 'OBJECT'; name: 'cpu_metrics_mutation_response'; ofType: null; } }; 'delete_cpu_metrics_by_pk': { name: 'delete_cpu_metrics_by_pk'; type: { kind: 'OBJECT'; name: 'cpu_metrics'; ofType: null; } }; 'delete_errors': { name: 'delete_errors'; type: { kind: 'OBJECT'; name: 'errors_mutation_response'; ofType: null; } }; 'delete_errors_by_pk': { name: 'delete_errors_by_pk'; type: { kind: 'OBJECT'; name: 'errors'; ofType: null; } }; 'delete_event_loop_logs': { name: 'delete_event_loop_logs'; type: { kind: 'OBJECT'; name: 'event_loop_logs_mutation_response'; ofType: null; } }; 'delete_event_loop_logs_by_pk': { name: 'delete_event_loop_logs_by_pk'; type: { kind: 'OBJECT'; name: 'event_loop_logs'; ofType: null; } }; 'delete_fps_logs': { name: 'delete_fps_logs'; type: { kind: 'OBJECT'; name: 'fps_logs_mutation_response'; ofType: null; } }; 'delete_fps_logs_by_pk': { name: 'delete_fps_logs_by_pk'; type: { kind: 'OBJECT'; name: 'fps_logs'; ofType: null; } }; 'delete_local_storage_metrics': { name: 'delete_local_storage_metrics'; type: { kind: 'OBJECT'; name: 'local_storage_metrics_mutation_response'; ofType: null; } }; 'delete_local_storage_metrics_by_pk': { name: 'delete_local_storage_metrics_by_pk'; type: { kind: 'OBJECT'; name: 'local_storage_metrics'; ofType: null; } }; 'delete_memory_logs': { name: 'delete_memory_logs'; type: { kind: 'OBJECT'; name: 'memory_logs_mutation_response'; ofType: null; } }; 'delete_memory_logs_by_pk': { name: 'delete_memory_logs_by_pk'; type: { kind: 'OBJECT'; name: 'memory_logs'; ofType: null; } }; 'delete_microfrontends': { name: 'delete_microfrontends'; type: { kind: 'OBJECT'; name: 'microfrontends_mutation_response'; ofType: null; } }; 'delete_microfrontends_by_pk': { name: 'delete_microfrontends_by_pk'; type: { kind: 'OBJECT'; name: 'microfrontends'; ofType: null; } }; 'delete_network_requests': { name: 'delete_network_requests'; type: { kind: 'OBJECT'; name: 'network_requests_mutation_response'; ofType: null; } }; 'delete_network_requests_by_pk': { name: 'delete_network_requests_by_pk'; type: { kind: 'OBJECT'; name: 'network_requests'; ofType: null; } }; 'delete_session': { name: 'delete_session'; type: { kind: 'OBJECT'; name: 'session_mutation_response'; ofType: null; } }; 'delete_session_by_pk': { name: 'delete_session_by_pk'; type: { kind: 'OBJECT'; name: 'session'; ofType: null; } }; 'delete_shared_sessions': { name: 'delete_shared_sessions'; type: { kind: 'OBJECT'; name: 'shared_sessions_mutation_response'; ofType: null; } }; 'delete_shared_sessions_by_pk': { name: 'delete_shared_sessions_by_pk'; type: { kind: 'OBJECT'; name: 'shared_sessions'; ofType: null; } }; 'delete_user_settings': { name: 'delete_user_settings'; type: { kind: 'OBJECT'; name: 'user_settings_mutation_response'; ofType: null; } }; 'delete_user_settings_by_pk': { name: 'delete_user_settings_by_pk'; type: { kind: 'OBJECT'; name: 'user_settings'; ofType: null; } }; 'delete_users': { name: 'delete_users'; type: { kind: 'OBJECT'; name: 'users_mutation_response'; ofType: null; } }; 'delete_users_by_pk': { name: 'delete_users_by_pk'; type: { kind: 'OBJECT'; name: 'users'; ofType: null; } }; 'insert_cpu_metrics': { name: 'insert_cpu_metrics'; type: { kind: 'OBJECT'; name: 'cpu_metrics_mutation_response'; ofType: null; } }; 'insert_cpu_metrics_one': { name: 'insert_cpu_metrics_one'; type: { kind: 'OBJECT'; name: 'cpu_metrics'; ofType: null; } }; 'insert_errors': { name: 'insert_errors'; type: { kind: 'OBJECT'; name: 'errors_mutation_response'; ofType: null; } }; 'insert_errors_one': { name: 'insert_errors_one'; type: { kind: 'OBJECT'; name: 'errors'; ofType: null; } }; 'insert_event_loop_logs': { name: 'insert_event_loop_logs'; type: { kind: 'OBJECT'; name: 'event_loop_logs_mutation_response'; ofType: null; } }; 'insert_event_loop_logs_one': { name: 'insert_event_loop_logs_one'; type: { kind: 'OBJECT'; name: 'event_loop_logs'; ofType: null; } }; 'insert_fps_logs': { name: 'insert_fps_logs'; type: { kind: 'OBJECT'; name: 'fps_logs_mutation_response'; ofType: null; } }; 'insert_fps_logs_one': { name: 'insert_fps_logs_one'; type: { kind: 'OBJECT'; name: 'fps_logs'; ofType: null; } }; 'insert_local_storage_metrics': { name: 'insert_local_storage_metrics'; type: { kind: 'OBJECT'; name: 'local_storage_metrics_mutation_response'; ofType: null; } }; 'insert_local_storage_metrics_one': { name: 'insert_local_storage_metrics_one'; type: { kind: 'OBJECT'; name: 'local_storage_metrics'; ofType: null; } }; 'insert_memory_logs': { name: 'insert_memory_logs'; type: { kind: 'OBJECT'; name: 'memory_logs_mutation_response'; ofType: null; } }; 'insert_memory_logs_one': { name: 'insert_memory_logs_one'; type: { kind: 'OBJECT'; name: 'memory_logs'; ofType: null; } }; 'insert_microfrontends': { name: 'insert_microfrontends'; type: { kind: 'OBJECT'; name: 'microfrontends_mutation_response'; ofType: null; } }; 'insert_microfrontends_one': { name: 'insert_microfrontends_one'; type: { kind: 'OBJECT'; name: 'microfrontends'; ofType: null; } }; 'insert_network_requests': { name: 'insert_network_requests'; type: { kind: 'OBJECT'; name: 'network_requests_mutation_response'; ofType: null; } }; 'insert_network_requests_one': { name: 'insert_network_requests_one'; type: { kind: 'OBJECT'; name: 'network_requests'; ofType: null; } }; 'insert_session': { name: 'insert_session'; type: { kind: 'OBJECT'; name: 'session_mutation_response'; ofType: null; } }; 'insert_session_one': { name: 'insert_session_one'; type: { kind: 'OBJECT'; name: 'session'; ofType: null; } }; 'insert_shared_sessions': { name: 'insert_shared_sessions'; type: { kind: 'OBJECT'; name: 'shared_sessions_mutation_response'; ofType: null; } }; 'insert_shared_sessions_one': { name: 'insert_shared_sessions_one'; type: { kind: 'OBJECT'; name: 'shared_sessions'; ofType: null; } }; 'insert_user_settings': { name: 'insert_user_settings'; type: { kind: 'OBJECT'; name: 'user_settings_mutation_response'; ofType: null; } }; 'insert_user_settings_one': { name: 'insert_user_settings_one'; type: { kind: 'OBJECT'; name: 'user_settings'; ofType: null; } }; 'insert_users': { name: 'insert_users'; type: { kind: 'OBJECT'; name: 'users_mutation_response'; ofType: null; } }; 'insert_users_one': { name: 'insert_users_one'; type: { kind: 'OBJECT'; name: 'users'; ofType: null; } }; 'update_cpu_metrics': { name: 'update_cpu_metrics'; type: { kind: 'OBJECT'; name: 'cpu_metrics_mutation_response'; ofType: null; } }; 'update_cpu_metrics_by_pk': { name: 'update_cpu_metrics_by_pk'; type: { kind: 'OBJECT'; name: 'cpu_metrics'; ofType: null; } }; 'update_cpu_metrics_many': { name: 'update_cpu_metrics_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'cpu_metrics_mutation_response'; ofType: null; }; } }; 'update_errors': { name: 'update_errors'; type: { kind: 'OBJECT'; name: 'errors_mutation_response'; ofType: null; } }; 'update_errors_by_pk': { name: 'update_errors_by_pk'; type: { kind: 'OBJECT'; name: 'errors'; ofType: null; } }; 'update_errors_many': { name: 'update_errors_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'errors_mutation_response'; ofType: null; }; } }; 'update_event_loop_logs': { name: 'update_event_loop_logs'; type: { kind: 'OBJECT'; name: 'event_loop_logs_mutation_response'; ofType: null; } }; 'update_event_loop_logs_by_pk': { name: 'update_event_loop_logs_by_pk'; type: { kind: 'OBJECT'; name: 'event_loop_logs'; ofType: null; } }; 'update_event_loop_logs_many': { name: 'update_event_loop_logs_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'event_loop_logs_mutation_response'; ofType: null; }; } }; 'update_fps_logs': { name: 'update_fps_logs'; type: { kind: 'OBJECT'; name: 'fps_logs_mutation_response'; ofType: null; } }; 'update_fps_logs_by_pk': { name: 'update_fps_logs_by_pk'; type: { kind: 'OBJECT'; name: 'fps_logs'; ofType: null; } }; 'update_fps_logs_many': { name: 'update_fps_logs_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'fps_logs_mutation_response'; ofType: null; }; } }; 'update_local_storage_metrics': { name: 'update_local_storage_metrics'; type: { kind: 'OBJECT'; name: 'local_storage_metrics_mutation_response'; ofType: null; } }; 'update_local_storage_metrics_by_pk': { name: 'update_local_storage_metrics_by_pk'; type: { kind: 'OBJECT'; name: 'local_storage_metrics'; ofType: null; } }; 'update_local_storage_metrics_many': { name: 'update_local_storage_metrics_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'local_storage_metrics_mutation_response'; ofType: null; }; } }; 'update_memory_logs': { name: 'update_memory_logs'; type: { kind: 'OBJECT'; name: 'memory_logs_mutation_response'; ofType: null; } }; 'update_memory_logs_by_pk': { name: 'update_memory_logs_by_pk'; type: { kind: 'OBJECT'; name: 'memory_logs'; ofType: null; } }; 'update_memory_logs_many': { name: 'update_memory_logs_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'memory_logs_mutation_response'; ofType: null; }; } }; 'update_microfrontends': { name: 'update_microfrontends'; type: { kind: 'OBJECT'; name: 'microfrontends_mutation_response'; ofType: null; } }; 'update_microfrontends_by_pk': { name: 'update_microfrontends_by_pk'; type: { kind: 'OBJECT'; name: 'microfrontends'; ofType: null; } }; 'update_microfrontends_many': { name: 'update_microfrontends_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'microfrontends_mutation_response'; ofType: null; }; } }; 'update_network_requests': { name: 'update_network_requests'; type: { kind: 'OBJECT'; name: 'network_requests_mutation_response'; ofType: null; } }; 'update_network_requests_by_pk': { name: 'update_network_requests_by_pk'; type: { kind: 'OBJECT'; name: 'network_requests'; ofType: null; } }; 'update_network_requests_many': { name: 'update_network_requests_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'network_requests_mutation_response'; ofType: null; }; } }; 'update_session': { name: 'update_session'; type: { kind: 'OBJECT'; name: 'session_mutation_response'; ofType: null; } }; 'update_session_by_pk': { name: 'update_session_by_pk'; type: { kind: 'OBJECT'; name: 'session'; ofType: null; } }; 'update_session_many': { name: 'update_session_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'session_mutation_response'; ofType: null; }; } }; 'update_shared_sessions': { name: 'update_shared_sessions'; type: { kind: 'OBJECT'; name: 'shared_sessions_mutation_response'; ofType: null; } }; 'update_shared_sessions_by_pk': { name: 'update_shared_sessions_by_pk'; type: { kind: 'OBJECT'; name: 'shared_sessions'; ofType: null; } }; 'update_shared_sessions_many': { name: 'update_shared_sessions_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'shared_sessions_mutation_response'; ofType: null; }; } }; 'update_user_settings': { name: 'update_user_settings'; type: { kind: 'OBJECT'; name: 'user_settings_mutation_response'; ofType: null; } }; 'update_user_settings_by_pk': { name: 'update_user_settings_by_pk'; type: { kind: 'OBJECT'; name: 'user_settings'; ofType: null; } }; 'update_user_settings_many': { name: 'update_user_settings_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'user_settings_mutation_response'; ofType: null; }; } }; 'update_users': { name: 'update_users'; type: { kind: 'OBJECT'; name: 'users_mutation_response'; ofType: null; } }; 'update_users_by_pk': { name: 'update_users_by_pk'; type: { kind: 'OBJECT'; name: 'users'; ofType: null; } }; 'update_users_many': { name: 'update_users_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'users_mutation_response'; ofType: null; }; } }; }; };
    'network_requests': { kind: 'OBJECT'; name: 'network_requests'; fields: { 'created_at': { name: 'created_at'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; } }; 'headers': { name: 'headers'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'method': { name: 'method'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'microfrontend_id': { name: 'microfrontend_id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'payload': { name: 'payload'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; } }; 'response_body': { name: 'response_body'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; } }; 'response_size_bytes': { name: 'response_size_bytes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'session_id': { name: 'session_id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'time_taken_ms': { name: 'time_taken_ms'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'network_requests_aggregate': { kind: 'OBJECT'; name: 'network_requests_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'network_requests_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'network_requests'; ofType: null; }; }; }; } }; }; };
    'network_requests_aggregate_fields': { kind: 'OBJECT'; name: 'network_requests_aggregate_fields'; fields: { 'avg': { name: 'avg'; type: { kind: 'OBJECT'; name: 'network_requests_avg_fields'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'network_requests_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'network_requests_min_fields'; ofType: null; } }; 'stddev': { name: 'stddev'; type: { kind: 'OBJECT'; name: 'network_requests_stddev_fields'; ofType: null; } }; 'stddev_pop': { name: 'stddev_pop'; type: { kind: 'OBJECT'; name: 'network_requests_stddev_pop_fields'; ofType: null; } }; 'stddev_samp': { name: 'stddev_samp'; type: { kind: 'OBJECT'; name: 'network_requests_stddev_samp_fields'; ofType: null; } }; 'sum': { name: 'sum'; type: { kind: 'OBJECT'; name: 'network_requests_sum_fields'; ofType: null; } }; 'var_pop': { name: 'var_pop'; type: { kind: 'OBJECT'; name: 'network_requests_var_pop_fields'; ofType: null; } }; 'var_samp': { name: 'var_samp'; type: { kind: 'OBJECT'; name: 'network_requests_var_samp_fields'; ofType: null; } }; 'variance': { name: 'variance'; type: { kind: 'OBJECT'; name: 'network_requests_variance_fields'; ofType: null; } }; }; };
    'network_requests_append_input': { kind: 'INPUT_OBJECT'; name: 'network_requests_append_input'; isOneOf: false; inputFields: [{ name: 'headers'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'payload'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'response_body'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }]; };
    'network_requests_avg_fields': { kind: 'OBJECT'; name: 'network_requests_avg_fields'; fields: { 'response_size_bytes': { name: 'response_size_bytes'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'time_taken_ms': { name: 'time_taken_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'network_requests_bool_exp': { kind: 'INPUT_OBJECT'; name: 'network_requests_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'network_requests_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'network_requests_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'network_requests_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'created_at'; type: { kind: 'INPUT_OBJECT'; name: 'timestamptz_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'headers'; type: { kind: 'INPUT_OBJECT'; name: 'jsonb_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'method'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'microfrontend_id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'payload'; type: { kind: 'INPUT_OBJECT'; name: 'jsonb_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'response_body'; type: { kind: 'INPUT_OBJECT'; name: 'jsonb_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'response_size_bytes'; type: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'time_taken_ms'; type: { kind: 'INPUT_OBJECT'; name: 'Float_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'network_requests_constraint': { name: 'network_requests_constraint'; enumValues: 'network_requests_pkey'; };
    'network_requests_delete_at_path_input': { kind: 'INPUT_OBJECT'; name: 'network_requests_delete_at_path_input'; isOneOf: false; inputFields: [{ name: 'headers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'payload'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'response_body'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'network_requests_delete_elem_input': { kind: 'INPUT_OBJECT'; name: 'network_requests_delete_elem_input'; isOneOf: false; inputFields: [{ name: 'headers'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'payload'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'response_body'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'network_requests_delete_key_input': { kind: 'INPUT_OBJECT'; name: 'network_requests_delete_key_input'; isOneOf: false; inputFields: [{ name: 'headers'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'payload'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'response_body'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'network_requests_inc_input': { kind: 'INPUT_OBJECT'; name: 'network_requests_inc_input'; isOneOf: false; inputFields: [{ name: 'response_size_bytes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'time_taken_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }]; };
    'network_requests_insert_input': { kind: 'INPUT_OBJECT'; name: 'network_requests_insert_input'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'headers'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'method'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'microfrontend_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'payload'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'response_body'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'response_size_bytes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'time_taken_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'network_requests_max_fields': { kind: 'OBJECT'; name: 'network_requests_max_fields'; fields: { 'created_at': { name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'method': { name: 'method'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'microfrontend_id': { name: 'microfrontend_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'response_size_bytes': { name: 'response_size_bytes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'session_id': { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'time_taken_ms': { name: 'time_taken_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'network_requests_min_fields': { kind: 'OBJECT'; name: 'network_requests_min_fields'; fields: { 'created_at': { name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'method': { name: 'method'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'microfrontend_id': { name: 'microfrontend_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'response_size_bytes': { name: 'response_size_bytes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'session_id': { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'time_taken_ms': { name: 'time_taken_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'network_requests_mutation_response': { kind: 'OBJECT'; name: 'network_requests_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'network_requests'; ofType: null; }; }; }; } }; }; };
    'network_requests_on_conflict': { kind: 'INPUT_OBJECT'; name: 'network_requests_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'network_requests_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'network_requests_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'network_requests_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'network_requests_order_by': { kind: 'INPUT_OBJECT'; name: 'network_requests_order_by'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'headers'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'method'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'microfrontend_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'payload'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'response_body'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'response_size_bytes'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'time_taken_ms'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'network_requests_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'network_requests_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; }; defaultValue: null }]; };
    'network_requests_prepend_input': { kind: 'INPUT_OBJECT'; name: 'network_requests_prepend_input'; isOneOf: false; inputFields: [{ name: 'headers'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'payload'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'response_body'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }]; };
    'network_requests_select_column': { name: 'network_requests_select_column'; enumValues: 'created_at' | 'headers' | 'id' | 'method' | 'microfrontend_id' | 'payload' | 'response_body' | 'response_size_bytes' | 'session_id' | 'status' | 'time_taken_ms' | 'url'; };
    'network_requests_set_input': { kind: 'INPUT_OBJECT'; name: 'network_requests_set_input'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'headers'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'method'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'microfrontend_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'payload'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'response_body'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'response_size_bytes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'time_taken_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'network_requests_stddev_fields': { kind: 'OBJECT'; name: 'network_requests_stddev_fields'; fields: { 'response_size_bytes': { name: 'response_size_bytes'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'time_taken_ms': { name: 'time_taken_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'network_requests_stddev_pop_fields': { kind: 'OBJECT'; name: 'network_requests_stddev_pop_fields'; fields: { 'response_size_bytes': { name: 'response_size_bytes'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'time_taken_ms': { name: 'time_taken_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'network_requests_stddev_samp_fields': { kind: 'OBJECT'; name: 'network_requests_stddev_samp_fields'; fields: { 'response_size_bytes': { name: 'response_size_bytes'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'time_taken_ms': { name: 'time_taken_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'network_requests_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'network_requests_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'network_requests_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'network_requests_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'network_requests_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'headers'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'method'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'microfrontend_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'payload'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'response_body'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'response_size_bytes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'time_taken_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'network_requests_sum_fields': { kind: 'OBJECT'; name: 'network_requests_sum_fields'; fields: { 'response_size_bytes': { name: 'response_size_bytes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'time_taken_ms': { name: 'time_taken_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'network_requests_update_column': { name: 'network_requests_update_column'; enumValues: 'created_at' | 'headers' | 'id' | 'method' | 'microfrontend_id' | 'payload' | 'response_body' | 'response_size_bytes' | 'session_id' | 'status' | 'time_taken_ms' | 'url'; };
    'network_requests_updates': { kind: 'INPUT_OBJECT'; name: 'network_requests_updates'; isOneOf: false; inputFields: [{ name: '_append'; type: { kind: 'INPUT_OBJECT'; name: 'network_requests_append_input'; ofType: null; }; defaultValue: null }, { name: '_delete_at_path'; type: { kind: 'INPUT_OBJECT'; name: 'network_requests_delete_at_path_input'; ofType: null; }; defaultValue: null }, { name: '_delete_elem'; type: { kind: 'INPUT_OBJECT'; name: 'network_requests_delete_elem_input'; ofType: null; }; defaultValue: null }, { name: '_delete_key'; type: { kind: 'INPUT_OBJECT'; name: 'network_requests_delete_key_input'; ofType: null; }; defaultValue: null }, { name: '_inc'; type: { kind: 'INPUT_OBJECT'; name: 'network_requests_inc_input'; ofType: null; }; defaultValue: null }, { name: '_prepend'; type: { kind: 'INPUT_OBJECT'; name: 'network_requests_prepend_input'; ofType: null; }; defaultValue: null }, { name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'network_requests_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'network_requests_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'network_requests_var_pop_fields': { kind: 'OBJECT'; name: 'network_requests_var_pop_fields'; fields: { 'response_size_bytes': { name: 'response_size_bytes'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'time_taken_ms': { name: 'time_taken_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'network_requests_var_samp_fields': { kind: 'OBJECT'; name: 'network_requests_var_samp_fields'; fields: { 'response_size_bytes': { name: 'response_size_bytes'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'time_taken_ms': { name: 'time_taken_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'network_requests_variance_fields': { kind: 'OBJECT'; name: 'network_requests_variance_fields'; fields: { 'response_size_bytes': { name: 'response_size_bytes'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'time_taken_ms': { name: 'time_taken_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'order_by': { name: 'order_by'; enumValues: 'asc' | 'asc_nulls_first' | 'asc_nulls_last' | 'desc' | 'desc_nulls_first' | 'desc_nulls_last'; };
    'query_root': { kind: 'OBJECT'; name: 'query_root'; fields: { 'cpu_metrics': { name: 'cpu_metrics'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'cpu_metrics'; ofType: null; }; }; }; } }; 'cpu_metrics_aggregate': { name: 'cpu_metrics_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'cpu_metrics_aggregate'; ofType: null; }; } }; 'cpu_metrics_by_pk': { name: 'cpu_metrics_by_pk'; type: { kind: 'OBJECT'; name: 'cpu_metrics'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'errors'; ofType: null; }; }; }; } }; 'errors_aggregate': { name: 'errors_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'errors_aggregate'; ofType: null; }; } }; 'errors_by_pk': { name: 'errors_by_pk'; type: { kind: 'OBJECT'; name: 'errors'; ofType: null; } }; 'event_loop_logs': { name: 'event_loop_logs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'event_loop_logs'; ofType: null; }; }; }; } }; 'event_loop_logs_aggregate': { name: 'event_loop_logs_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'event_loop_logs_aggregate'; ofType: null; }; } }; 'event_loop_logs_by_pk': { name: 'event_loop_logs_by_pk'; type: { kind: 'OBJECT'; name: 'event_loop_logs'; ofType: null; } }; 'fps_logs': { name: 'fps_logs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'fps_logs'; ofType: null; }; }; }; } }; 'fps_logs_aggregate': { name: 'fps_logs_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'fps_logs_aggregate'; ofType: null; }; } }; 'fps_logs_by_pk': { name: 'fps_logs_by_pk'; type: { kind: 'OBJECT'; name: 'fps_logs'; ofType: null; } }; 'local_storage_metrics': { name: 'local_storage_metrics'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'local_storage_metrics'; ofType: null; }; }; }; } }; 'local_storage_metrics_aggregate': { name: 'local_storage_metrics_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'local_storage_metrics_aggregate'; ofType: null; }; } }; 'local_storage_metrics_by_pk': { name: 'local_storage_metrics_by_pk'; type: { kind: 'OBJECT'; name: 'local_storage_metrics'; ofType: null; } }; 'memory_logs': { name: 'memory_logs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'memory_logs'; ofType: null; }; }; }; } }; 'memory_logs_aggregate': { name: 'memory_logs_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'memory_logs_aggregate'; ofType: null; }; } }; 'memory_logs_by_pk': { name: 'memory_logs_by_pk'; type: { kind: 'OBJECT'; name: 'memory_logs'; ofType: null; } }; 'microfrontends': { name: 'microfrontends'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'microfrontends'; ofType: null; }; }; }; } }; 'microfrontends_aggregate': { name: 'microfrontends_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'microfrontends_aggregate'; ofType: null; }; } }; 'microfrontends_by_pk': { name: 'microfrontends_by_pk'; type: { kind: 'OBJECT'; name: 'microfrontends'; ofType: null; } }; 'network_requests': { name: 'network_requests'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'network_requests'; ofType: null; }; }; }; } }; 'network_requests_aggregate': { name: 'network_requests_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'network_requests_aggregate'; ofType: null; }; } }; 'network_requests_by_pk': { name: 'network_requests_by_pk'; type: { kind: 'OBJECT'; name: 'network_requests'; ofType: null; } }; 'session': { name: 'session'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'session'; ofType: null; }; }; }; } }; 'session_aggregate': { name: 'session_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'session_aggregate'; ofType: null; }; } }; 'session_by_pk': { name: 'session_by_pk'; type: { kind: 'OBJECT'; name: 'session'; ofType: null; } }; 'shared_sessions': { name: 'shared_sessions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'shared_sessions'; ofType: null; }; }; }; } }; 'shared_sessions_aggregate': { name: 'shared_sessions_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'shared_sessions_aggregate'; ofType: null; }; } }; 'shared_sessions_by_pk': { name: 'shared_sessions_by_pk'; type: { kind: 'OBJECT'; name: 'shared_sessions'; ofType: null; } }; 'user_settings': { name: 'user_settings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'user_settings'; ofType: null; }; }; }; } }; 'user_settings_aggregate': { name: 'user_settings_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'user_settings_aggregate'; ofType: null; }; } }; 'user_settings_by_pk': { name: 'user_settings_by_pk'; type: { kind: 'OBJECT'; name: 'user_settings'; ofType: null; } }; 'users': { name: 'users'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'users'; ofType: null; }; }; }; } }; 'users_aggregate': { name: 'users_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'users_aggregate'; ofType: null; }; } }; 'users_by_pk': { name: 'users_by_pk'; type: { kind: 'OBJECT'; name: 'users'; ofType: null; } }; }; };
    'session': { kind: 'OBJECT'; name: 'session'; fields: { 'created_at': { name: 'created_at'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'shared_sessions': { name: 'shared_sessions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'shared_sessions'; ofType: null; }; }; }; } }; 'shared_sessions_aggregate': { name: 'shared_sessions_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'shared_sessions_aggregate'; ofType: null; }; } }; 'user_id': { name: 'user_id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'session_aggregate': { kind: 'OBJECT'; name: 'session_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'session_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'session'; ofType: null; }; }; }; } }; }; };
    'session_aggregate_fields': { kind: 'OBJECT'; name: 'session_aggregate_fields'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'session_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'session_min_fields'; ofType: null; } }; }; };
    'session_append_input': { kind: 'INPUT_OBJECT'; name: 'session_append_input'; isOneOf: false; inputFields: [{ name: 'metadata'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }]; };
    'session_bool_exp': { kind: 'INPUT_OBJECT'; name: 'session_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'session_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'session_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'session_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'created_at'; type: { kind: 'INPUT_OBJECT'; name: 'timestamptz_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'INPUT_OBJECT'; name: 'jsonb_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'shared_sessions'; type: { kind: 'INPUT_OBJECT'; name: 'shared_sessions_bool_exp'; ofType: null; }; defaultValue: null }, { name: 'shared_sessions_aggregate'; type: { kind: 'INPUT_OBJECT'; name: 'shared_sessions_aggregate_bool_exp'; ofType: null; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'session_constraint': { name: 'session_constraint'; enumValues: 'session_pkey'; };
    'session_delete_at_path_input': { kind: 'INPUT_OBJECT'; name: 'session_delete_at_path_input'; isOneOf: false; inputFields: [{ name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'session_delete_elem_input': { kind: 'INPUT_OBJECT'; name: 'session_delete_elem_input'; isOneOf: false; inputFields: [{ name: 'metadata'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'session_delete_key_input': { kind: 'INPUT_OBJECT'; name: 'session_delete_key_input'; isOneOf: false; inputFields: [{ name: 'metadata'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'session_insert_input': { kind: 'INPUT_OBJECT'; name: 'session_insert_input'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'shared_sessions'; type: { kind: 'INPUT_OBJECT'; name: 'shared_sessions_arr_rel_insert_input'; ofType: null; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'session_max_fields': { kind: 'OBJECT'; name: 'session_max_fields'; fields: { 'created_at': { name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user_id': { name: 'user_id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'session_min_fields': { kind: 'OBJECT'; name: 'session_min_fields'; fields: { 'created_at': { name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user_id': { name: 'user_id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'session_mutation_response': { kind: 'OBJECT'; name: 'session_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'session'; ofType: null; }; }; }; } }; }; };
    'session_on_conflict': { kind: 'INPUT_OBJECT'; name: 'session_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'session_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'session_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'session_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'session_order_by': { kind: 'INPUT_OBJECT'; name: 'session_order_by'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'shared_sessions_aggregate'; type: { kind: 'INPUT_OBJECT'; name: 'shared_sessions_aggregate_order_by'; ofType: null; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'session_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'session_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; }; defaultValue: null }]; };
    'session_prepend_input': { kind: 'INPUT_OBJECT'; name: 'session_prepend_input'; isOneOf: false; inputFields: [{ name: 'metadata'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }]; };
    'session_select_column': { name: 'session_select_column'; enumValues: 'created_at' | 'id' | 'metadata' | 'name' | 'user_id'; };
    'session_set_input': { kind: 'INPUT_OBJECT'; name: 'session_set_input'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'session_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'session_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'session_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'session_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'session_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'created_at'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'session_update_column': { name: 'session_update_column'; enumValues: 'created_at' | 'id' | 'metadata' | 'name' | 'user_id'; };
    'session_updates': { kind: 'INPUT_OBJECT'; name: 'session_updates'; isOneOf: false; inputFields: [{ name: '_append'; type: { kind: 'INPUT_OBJECT'; name: 'session_append_input'; ofType: null; }; defaultValue: null }, { name: '_delete_at_path'; type: { kind: 'INPUT_OBJECT'; name: 'session_delete_at_path_input'; ofType: null; }; defaultValue: null }, { name: '_delete_elem'; type: { kind: 'INPUT_OBJECT'; name: 'session_delete_elem_input'; ofType: null; }; defaultValue: null }, { name: '_delete_key'; type: { kind: 'INPUT_OBJECT'; name: 'session_delete_key_input'; ofType: null; }; defaultValue: null }, { name: '_prepend'; type: { kind: 'INPUT_OBJECT'; name: 'session_prepend_input'; ofType: null; }; defaultValue: null }, { name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'session_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'session_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'shared_sessions': { kind: 'OBJECT'; name: 'shared_sessions'; fields: { 'from': { name: 'from'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'session_id': { name: 'session_id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'to': { name: 'to'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'user_id': { name: 'user_id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'shared_sessions_aggregate': { kind: 'OBJECT'; name: 'shared_sessions_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'shared_sessions_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'shared_sessions'; ofType: null; }; }; }; } }; }; };
    'shared_sessions_aggregate_bool_exp': { kind: 'INPUT_OBJECT'; name: 'shared_sessions_aggregate_bool_exp'; isOneOf: false; inputFields: [{ name: 'count'; type: { kind: 'INPUT_OBJECT'; name: 'shared_sessions_aggregate_bool_exp_count'; ofType: null; }; defaultValue: null }]; };
    'shared_sessions_aggregate_bool_exp_count': { kind: 'INPUT_OBJECT'; name: 'shared_sessions_aggregate_bool_exp_count'; isOneOf: false; inputFields: [{ name: 'arguments'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'shared_sessions_select_column'; ofType: null; }; }; }; defaultValue: null }, { name: 'distinct'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'shared_sessions_bool_exp'; ofType: null; }; defaultValue: null }, { name: 'predicate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; }; defaultValue: null }]; };
    'shared_sessions_aggregate_fields': { kind: 'OBJECT'; name: 'shared_sessions_aggregate_fields'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'shared_sessions_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'shared_sessions_min_fields'; ofType: null; } }; }; };
    'shared_sessions_aggregate_order_by': { kind: 'INPUT_OBJECT'; name: 'shared_sessions_aggregate_order_by'; isOneOf: false; inputFields: [{ name: 'count'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'max'; type: { kind: 'INPUT_OBJECT'; name: 'shared_sessions_max_order_by'; ofType: null; }; defaultValue: null }, { name: 'min'; type: { kind: 'INPUT_OBJECT'; name: 'shared_sessions_min_order_by'; ofType: null; }; defaultValue: null }]; };
    'shared_sessions_arr_rel_insert_input': { kind: 'INPUT_OBJECT'; name: 'shared_sessions_arr_rel_insert_input'; isOneOf: false; inputFields: [{ name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'shared_sessions_insert_input'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'on_conflict'; type: { kind: 'INPUT_OBJECT'; name: 'shared_sessions_on_conflict'; ofType: null; }; defaultValue: null }]; };
    'shared_sessions_bool_exp': { kind: 'INPUT_OBJECT'; name: 'shared_sessions_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'shared_sessions_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'shared_sessions_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'shared_sessions_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'from'; type: { kind: 'INPUT_OBJECT'; name: 'timestamptz_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'to'; type: { kind: 'INPUT_OBJECT'; name: 'timestamptz_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'shared_sessions_constraint': { name: 'shared_sessions_constraint'; enumValues: 'shared_sessions_pkey'; };
    'shared_sessions_insert_input': { kind: 'INPUT_OBJECT'; name: 'shared_sessions_insert_input'; isOneOf: false; inputFields: [{ name: 'from'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'to'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'shared_sessions_max_fields': { kind: 'OBJECT'; name: 'shared_sessions_max_fields'; fields: { 'from': { name: 'from'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'session_id': { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'to': { name: 'to'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'user_id': { name: 'user_id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'shared_sessions_max_order_by': { kind: 'INPUT_OBJECT'; name: 'shared_sessions_max_order_by'; isOneOf: false; inputFields: [{ name: 'from'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'to'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'shared_sessions_min_fields': { kind: 'OBJECT'; name: 'shared_sessions_min_fields'; fields: { 'from': { name: 'from'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'session_id': { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'to': { name: 'to'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; } }; 'user_id': { name: 'user_id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'shared_sessions_min_order_by': { kind: 'INPUT_OBJECT'; name: 'shared_sessions_min_order_by'; isOneOf: false; inputFields: [{ name: 'from'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'to'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'shared_sessions_mutation_response': { kind: 'OBJECT'; name: 'shared_sessions_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'shared_sessions'; ofType: null; }; }; }; } }; }; };
    'shared_sessions_on_conflict': { kind: 'INPUT_OBJECT'; name: 'shared_sessions_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'shared_sessions_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'shared_sessions_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'shared_sessions_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'shared_sessions_order_by': { kind: 'INPUT_OBJECT'; name: 'shared_sessions_order_by'; isOneOf: false; inputFields: [{ name: 'from'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'to'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'shared_sessions_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'shared_sessions_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'session_id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'shared_sessions_select_column': { name: 'shared_sessions_select_column'; enumValues: 'from' | 'session_id' | 'to' | 'user_id'; };
    'shared_sessions_set_input': { kind: 'INPUT_OBJECT'; name: 'shared_sessions_set_input'; isOneOf: false; inputFields: [{ name: 'from'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'to'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'shared_sessions_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'shared_sessions_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'shared_sessions_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'shared_sessions_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'shared_sessions_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'from'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'session_id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'to'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'shared_sessions_update_column': { name: 'shared_sessions_update_column'; enumValues: 'from' | 'session_id' | 'to' | 'user_id'; };
    'shared_sessions_updates': { kind: 'INPUT_OBJECT'; name: 'shared_sessions_updates'; isOneOf: false; inputFields: [{ name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'shared_sessions_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'shared_sessions_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'subscription_root': { kind: 'OBJECT'; name: 'subscription_root'; fields: { 'cpu_metrics': { name: 'cpu_metrics'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'cpu_metrics'; ofType: null; }; }; }; } }; 'cpu_metrics_aggregate': { name: 'cpu_metrics_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'cpu_metrics_aggregate'; ofType: null; }; } }; 'cpu_metrics_by_pk': { name: 'cpu_metrics_by_pk'; type: { kind: 'OBJECT'; name: 'cpu_metrics'; ofType: null; } }; 'cpu_metrics_stream': { name: 'cpu_metrics_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'cpu_metrics'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'errors'; ofType: null; }; }; }; } }; 'errors_aggregate': { name: 'errors_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'errors_aggregate'; ofType: null; }; } }; 'errors_by_pk': { name: 'errors_by_pk'; type: { kind: 'OBJECT'; name: 'errors'; ofType: null; } }; 'errors_stream': { name: 'errors_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'errors'; ofType: null; }; }; }; } }; 'event_loop_logs': { name: 'event_loop_logs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'event_loop_logs'; ofType: null; }; }; }; } }; 'event_loop_logs_aggregate': { name: 'event_loop_logs_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'event_loop_logs_aggregate'; ofType: null; }; } }; 'event_loop_logs_by_pk': { name: 'event_loop_logs_by_pk'; type: { kind: 'OBJECT'; name: 'event_loop_logs'; ofType: null; } }; 'event_loop_logs_stream': { name: 'event_loop_logs_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'event_loop_logs'; ofType: null; }; }; }; } }; 'fps_logs': { name: 'fps_logs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'fps_logs'; ofType: null; }; }; }; } }; 'fps_logs_aggregate': { name: 'fps_logs_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'fps_logs_aggregate'; ofType: null; }; } }; 'fps_logs_by_pk': { name: 'fps_logs_by_pk'; type: { kind: 'OBJECT'; name: 'fps_logs'; ofType: null; } }; 'fps_logs_stream': { name: 'fps_logs_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'fps_logs'; ofType: null; }; }; }; } }; 'local_storage_metrics': { name: 'local_storage_metrics'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'local_storage_metrics'; ofType: null; }; }; }; } }; 'local_storage_metrics_aggregate': { name: 'local_storage_metrics_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'local_storage_metrics_aggregate'; ofType: null; }; } }; 'local_storage_metrics_by_pk': { name: 'local_storage_metrics_by_pk'; type: { kind: 'OBJECT'; name: 'local_storage_metrics'; ofType: null; } }; 'local_storage_metrics_stream': { name: 'local_storage_metrics_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'local_storage_metrics'; ofType: null; }; }; }; } }; 'memory_logs': { name: 'memory_logs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'memory_logs'; ofType: null; }; }; }; } }; 'memory_logs_aggregate': { name: 'memory_logs_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'memory_logs_aggregate'; ofType: null; }; } }; 'memory_logs_by_pk': { name: 'memory_logs_by_pk'; type: { kind: 'OBJECT'; name: 'memory_logs'; ofType: null; } }; 'memory_logs_stream': { name: 'memory_logs_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'memory_logs'; ofType: null; }; }; }; } }; 'microfrontends': { name: 'microfrontends'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'microfrontends'; ofType: null; }; }; }; } }; 'microfrontends_aggregate': { name: 'microfrontends_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'microfrontends_aggregate'; ofType: null; }; } }; 'microfrontends_by_pk': { name: 'microfrontends_by_pk'; type: { kind: 'OBJECT'; name: 'microfrontends'; ofType: null; } }; 'microfrontends_stream': { name: 'microfrontends_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'microfrontends'; ofType: null; }; }; }; } }; 'network_requests': { name: 'network_requests'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'network_requests'; ofType: null; }; }; }; } }; 'network_requests_aggregate': { name: 'network_requests_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'network_requests_aggregate'; ofType: null; }; } }; 'network_requests_by_pk': { name: 'network_requests_by_pk'; type: { kind: 'OBJECT'; name: 'network_requests'; ofType: null; } }; 'network_requests_stream': { name: 'network_requests_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'network_requests'; ofType: null; }; }; }; } }; 'session': { name: 'session'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'session'; ofType: null; }; }; }; } }; 'session_aggregate': { name: 'session_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'session_aggregate'; ofType: null; }; } }; 'session_by_pk': { name: 'session_by_pk'; type: { kind: 'OBJECT'; name: 'session'; ofType: null; } }; 'session_stream': { name: 'session_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'session'; ofType: null; }; }; }; } }; 'shared_sessions': { name: 'shared_sessions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'shared_sessions'; ofType: null; }; }; }; } }; 'shared_sessions_aggregate': { name: 'shared_sessions_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'shared_sessions_aggregate'; ofType: null; }; } }; 'shared_sessions_by_pk': { name: 'shared_sessions_by_pk'; type: { kind: 'OBJECT'; name: 'shared_sessions'; ofType: null; } }; 'shared_sessions_stream': { name: 'shared_sessions_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'shared_sessions'; ofType: null; }; }; }; } }; 'user_settings': { name: 'user_settings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'user_settings'; ofType: null; }; }; }; } }; 'user_settings_aggregate': { name: 'user_settings_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'user_settings_aggregate'; ofType: null; }; } }; 'user_settings_by_pk': { name: 'user_settings_by_pk'; type: { kind: 'OBJECT'; name: 'user_settings'; ofType: null; } }; 'user_settings_stream': { name: 'user_settings_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'user_settings'; ofType: null; }; }; }; } }; 'users': { name: 'users'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'users'; ofType: null; }; }; }; } }; 'users_aggregate': { name: 'users_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'users_aggregate'; ofType: null; }; } }; 'users_by_pk': { name: 'users_by_pk'; type: { kind: 'OBJECT'; name: 'users'; ofType: null; } }; 'users_stream': { name: 'users_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'users'; ofType: null; }; }; }; } }; }; };
    'timestamptz': unknown;
    'timestamptz_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'timestamptz_comparison_exp'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; }; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'timestamptz'; ofType: null; }; }; }; defaultValue: null }]; };
    'user_settings': { kind: 'OBJECT'; name: 'user_settings'; fields: { 'allowed_repetition_interval_seconds': { name: 'allowed_repetition_interval_seconds'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'default_time_range_minutes': { name: 'default_time_range_minutes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'event_loop_delay_bad_ms': { name: 'event_loop_delay_bad_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'event_loop_delay_good_ms': { name: 'event_loop_delay_good_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; } }; 'payload_threshold_large_kb': { name: 'payload_threshold_large_kb'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'payload_threshold_ok_kb': { name: 'payload_threshold_ok_kb'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'request_threshold_bad_ms': { name: 'request_threshold_bad_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'request_threshold_good_ms': { name: 'request_threshold_good_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'user_id': { name: 'user_id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'user_settings_aggregate': { kind: 'OBJECT'; name: 'user_settings_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'user_settings_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'user_settings'; ofType: null; }; }; }; } }; }; };
    'user_settings_aggregate_fields': { kind: 'OBJECT'; name: 'user_settings_aggregate_fields'; fields: { 'avg': { name: 'avg'; type: { kind: 'OBJECT'; name: 'user_settings_avg_fields'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'user_settings_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'user_settings_min_fields'; ofType: null; } }; 'stddev': { name: 'stddev'; type: { kind: 'OBJECT'; name: 'user_settings_stddev_fields'; ofType: null; } }; 'stddev_pop': { name: 'stddev_pop'; type: { kind: 'OBJECT'; name: 'user_settings_stddev_pop_fields'; ofType: null; } }; 'stddev_samp': { name: 'stddev_samp'; type: { kind: 'OBJECT'; name: 'user_settings_stddev_samp_fields'; ofType: null; } }; 'sum': { name: 'sum'; type: { kind: 'OBJECT'; name: 'user_settings_sum_fields'; ofType: null; } }; 'var_pop': { name: 'var_pop'; type: { kind: 'OBJECT'; name: 'user_settings_var_pop_fields'; ofType: null; } }; 'var_samp': { name: 'var_samp'; type: { kind: 'OBJECT'; name: 'user_settings_var_samp_fields'; ofType: null; } }; 'variance': { name: 'variance'; type: { kind: 'OBJECT'; name: 'user_settings_variance_fields'; ofType: null; } }; }; };
    'user_settings_avg_fields': { kind: 'OBJECT'; name: 'user_settings_avg_fields'; fields: { 'allowed_repetition_interval_seconds': { name: 'allowed_repetition_interval_seconds'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'default_time_range_minutes': { name: 'default_time_range_minutes'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'event_loop_delay_bad_ms': { name: 'event_loop_delay_bad_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'event_loop_delay_good_ms': { name: 'event_loop_delay_good_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'payload_threshold_large_kb': { name: 'payload_threshold_large_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'payload_threshold_ok_kb': { name: 'payload_threshold_ok_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'request_threshold_bad_ms': { name: 'request_threshold_bad_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'request_threshold_good_ms': { name: 'request_threshold_good_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'user_settings_bool_exp': { kind: 'INPUT_OBJECT'; name: 'user_settings_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'user_settings_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'user_settings_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'user_settings_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'allowed_repetition_interval_seconds'; type: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'default_time_range_minutes'; type: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'event_loop_delay_bad_ms'; type: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'event_loop_delay_good_ms'; type: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'payload_threshold_large_kb'; type: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'payload_threshold_ok_kb'; type: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'request_threshold_bad_ms'; type: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'request_threshold_good_ms'; type: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'user_settings_constraint': { name: 'user_settings_constraint'; enumValues: 'user_settings_pkey' | 'user_settings_user_id_key'; };
    'user_settings_inc_input': { kind: 'INPUT_OBJECT'; name: 'user_settings_inc_input'; isOneOf: false; inputFields: [{ name: 'allowed_repetition_interval_seconds'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'default_time_range_minutes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'event_loop_delay_bad_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'event_loop_delay_good_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'payload_threshold_large_kb'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'payload_threshold_ok_kb'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'request_threshold_bad_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'request_threshold_good_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'user_settings_insert_input': { kind: 'INPUT_OBJECT'; name: 'user_settings_insert_input'; isOneOf: false; inputFields: [{ name: 'allowed_repetition_interval_seconds'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'default_time_range_minutes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'event_loop_delay_bad_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'event_loop_delay_good_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'payload_threshold_large_kb'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'payload_threshold_ok_kb'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'request_threshold_bad_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'request_threshold_good_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'user_settings_max_fields': { kind: 'OBJECT'; name: 'user_settings_max_fields'; fields: { 'allowed_repetition_interval_seconds': { name: 'allowed_repetition_interval_seconds'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'default_time_range_minutes': { name: 'default_time_range_minutes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'event_loop_delay_bad_ms': { name: 'event_loop_delay_bad_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'event_loop_delay_good_ms': { name: 'event_loop_delay_good_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'payload_threshold_large_kb': { name: 'payload_threshold_large_kb'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'payload_threshold_ok_kb': { name: 'payload_threshold_ok_kb'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'request_threshold_bad_ms': { name: 'request_threshold_bad_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'request_threshold_good_ms': { name: 'request_threshold_good_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'user_id': { name: 'user_id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'user_settings_min_fields': { kind: 'OBJECT'; name: 'user_settings_min_fields'; fields: { 'allowed_repetition_interval_seconds': { name: 'allowed_repetition_interval_seconds'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'default_time_range_minutes': { name: 'default_time_range_minutes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'event_loop_delay_bad_ms': { name: 'event_loop_delay_bad_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'event_loop_delay_good_ms': { name: 'event_loop_delay_good_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; } }; 'payload_threshold_large_kb': { name: 'payload_threshold_large_kb'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'payload_threshold_ok_kb': { name: 'payload_threshold_ok_kb'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'request_threshold_bad_ms': { name: 'request_threshold_bad_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'request_threshold_good_ms': { name: 'request_threshold_good_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'user_id': { name: 'user_id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'user_settings_mutation_response': { kind: 'OBJECT'; name: 'user_settings_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'user_settings'; ofType: null; }; }; }; } }; }; };
    'user_settings_on_conflict': { kind: 'INPUT_OBJECT'; name: 'user_settings_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'user_settings_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'user_settings_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'user_settings_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'user_settings_order_by': { kind: 'INPUT_OBJECT'; name: 'user_settings_order_by'; isOneOf: false; inputFields: [{ name: 'allowed_repetition_interval_seconds'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'default_time_range_minutes'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'event_loop_delay_bad_ms'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'event_loop_delay_good_ms'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'payload_threshold_large_kb'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'payload_threshold_ok_kb'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'request_threshold_bad_ms'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'request_threshold_good_ms'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'user_settings_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'user_settings_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'payload_threshold_large_kb'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'user_settings_select_column': { name: 'user_settings_select_column'; enumValues: 'allowed_repetition_interval_seconds' | 'default_time_range_minutes' | 'event_loop_delay_bad_ms' | 'event_loop_delay_good_ms' | 'id' | 'payload_threshold_large_kb' | 'payload_threshold_ok_kb' | 'request_threshold_bad_ms' | 'request_threshold_good_ms' | 'user_id'; };
    'user_settings_set_input': { kind: 'INPUT_OBJECT'; name: 'user_settings_set_input'; isOneOf: false; inputFields: [{ name: 'allowed_repetition_interval_seconds'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'default_time_range_minutes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'event_loop_delay_bad_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'event_loop_delay_good_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'payload_threshold_large_kb'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'payload_threshold_ok_kb'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'request_threshold_bad_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'request_threshold_good_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'user_settings_stddev_fields': { kind: 'OBJECT'; name: 'user_settings_stddev_fields'; fields: { 'allowed_repetition_interval_seconds': { name: 'allowed_repetition_interval_seconds'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'default_time_range_minutes': { name: 'default_time_range_minutes'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'event_loop_delay_bad_ms': { name: 'event_loop_delay_bad_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'event_loop_delay_good_ms': { name: 'event_loop_delay_good_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'payload_threshold_large_kb': { name: 'payload_threshold_large_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'payload_threshold_ok_kb': { name: 'payload_threshold_ok_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'request_threshold_bad_ms': { name: 'request_threshold_bad_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'request_threshold_good_ms': { name: 'request_threshold_good_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'user_settings_stddev_pop_fields': { kind: 'OBJECT'; name: 'user_settings_stddev_pop_fields'; fields: { 'allowed_repetition_interval_seconds': { name: 'allowed_repetition_interval_seconds'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'default_time_range_minutes': { name: 'default_time_range_minutes'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'event_loop_delay_bad_ms': { name: 'event_loop_delay_bad_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'event_loop_delay_good_ms': { name: 'event_loop_delay_good_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'payload_threshold_large_kb': { name: 'payload_threshold_large_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'payload_threshold_ok_kb': { name: 'payload_threshold_ok_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'request_threshold_bad_ms': { name: 'request_threshold_bad_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'request_threshold_good_ms': { name: 'request_threshold_good_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'user_settings_stddev_samp_fields': { kind: 'OBJECT'; name: 'user_settings_stddev_samp_fields'; fields: { 'allowed_repetition_interval_seconds': { name: 'allowed_repetition_interval_seconds'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'default_time_range_minutes': { name: 'default_time_range_minutes'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'event_loop_delay_bad_ms': { name: 'event_loop_delay_bad_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'event_loop_delay_good_ms': { name: 'event_loop_delay_good_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'payload_threshold_large_kb': { name: 'payload_threshold_large_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'payload_threshold_ok_kb': { name: 'payload_threshold_ok_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'request_threshold_bad_ms': { name: 'request_threshold_bad_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'request_threshold_good_ms': { name: 'request_threshold_good_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'user_settings_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'user_settings_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'user_settings_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'user_settings_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'user_settings_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'allowed_repetition_interval_seconds'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'default_time_range_minutes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'event_loop_delay_bad_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'event_loop_delay_good_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: 'payload_threshold_large_kb'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'payload_threshold_ok_kb'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'request_threshold_bad_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'request_threshold_good_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'user_id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'user_settings_sum_fields': { kind: 'OBJECT'; name: 'user_settings_sum_fields'; fields: { 'allowed_repetition_interval_seconds': { name: 'allowed_repetition_interval_seconds'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'default_time_range_minutes': { name: 'default_time_range_minutes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'event_loop_delay_bad_ms': { name: 'event_loop_delay_bad_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'event_loop_delay_good_ms': { name: 'event_loop_delay_good_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'payload_threshold_large_kb': { name: 'payload_threshold_large_kb'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'payload_threshold_ok_kb': { name: 'payload_threshold_ok_kb'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'request_threshold_bad_ms': { name: 'request_threshold_bad_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'request_threshold_good_ms': { name: 'request_threshold_good_ms'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'user_settings_update_column': { name: 'user_settings_update_column'; enumValues: 'allowed_repetition_interval_seconds' | 'default_time_range_minutes' | 'event_loop_delay_bad_ms' | 'event_loop_delay_good_ms' | 'id' | 'payload_threshold_large_kb' | 'payload_threshold_ok_kb' | 'request_threshold_bad_ms' | 'request_threshold_good_ms' | 'user_id'; };
    'user_settings_updates': { kind: 'INPUT_OBJECT'; name: 'user_settings_updates'; isOneOf: false; inputFields: [{ name: '_inc'; type: { kind: 'INPUT_OBJECT'; name: 'user_settings_inc_input'; ofType: null; }; defaultValue: null }, { name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'user_settings_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'user_settings_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'user_settings_var_pop_fields': { kind: 'OBJECT'; name: 'user_settings_var_pop_fields'; fields: { 'allowed_repetition_interval_seconds': { name: 'allowed_repetition_interval_seconds'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'default_time_range_minutes': { name: 'default_time_range_minutes'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'event_loop_delay_bad_ms': { name: 'event_loop_delay_bad_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'event_loop_delay_good_ms': { name: 'event_loop_delay_good_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'payload_threshold_large_kb': { name: 'payload_threshold_large_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'payload_threshold_ok_kb': { name: 'payload_threshold_ok_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'request_threshold_bad_ms': { name: 'request_threshold_bad_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'request_threshold_good_ms': { name: 'request_threshold_good_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'user_settings_var_samp_fields': { kind: 'OBJECT'; name: 'user_settings_var_samp_fields'; fields: { 'allowed_repetition_interval_seconds': { name: 'allowed_repetition_interval_seconds'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'default_time_range_minutes': { name: 'default_time_range_minutes'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'event_loop_delay_bad_ms': { name: 'event_loop_delay_bad_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'event_loop_delay_good_ms': { name: 'event_loop_delay_good_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'payload_threshold_large_kb': { name: 'payload_threshold_large_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'payload_threshold_ok_kb': { name: 'payload_threshold_ok_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'request_threshold_bad_ms': { name: 'request_threshold_bad_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'request_threshold_good_ms': { name: 'request_threshold_good_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'user_settings_variance_fields': { kind: 'OBJECT'; name: 'user_settings_variance_fields'; fields: { 'allowed_repetition_interval_seconds': { name: 'allowed_repetition_interval_seconds'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'default_time_range_minutes': { name: 'default_time_range_minutes'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'event_loop_delay_bad_ms': { name: 'event_loop_delay_bad_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'event_loop_delay_good_ms': { name: 'event_loop_delay_good_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'payload_threshold_large_kb': { name: 'payload_threshold_large_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'payload_threshold_ok_kb': { name: 'payload_threshold_ok_kb'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'request_threshold_bad_ms': { name: 'request_threshold_bad_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'request_threshold_good_ms': { name: 'request_threshold_good_ms'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'users': { kind: 'OBJECT'; name: 'users'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'users_aggregate': { kind: 'OBJECT'; name: 'users_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'users_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'users'; ofType: null; }; }; }; } }; }; };
    'users_aggregate_fields': { kind: 'OBJECT'; name: 'users_aggregate_fields'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'users_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'users_min_fields'; ofType: null; } }; }; };
    'users_bool_exp': { kind: 'INPUT_OBJECT'; name: 'users_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'users_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'users_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'users_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'users_constraint': { name: 'users_constraint'; enumValues: 'users_pkey'; };
    'users_insert_input': { kind: 'INPUT_OBJECT'; name: 'users_insert_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'users_max_fields': { kind: 'OBJECT'; name: 'users_max_fields'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'username': { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'users_min_fields': { kind: 'OBJECT'; name: 'users_min_fields'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'username': { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'users_mutation_response': { kind: 'OBJECT'; name: 'users_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'users'; ofType: null; }; }; }; } }; }; };
    'users_on_conflict': { kind: 'INPUT_OBJECT'; name: 'users_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'users_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'users_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'users_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'users_order_by': { kind: 'INPUT_OBJECT'; name: 'users_order_by'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'users_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'users_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'users_select_column': { name: 'users_select_column'; enumValues: 'id' | 'username'; };
    'users_set_input': { kind: 'INPUT_OBJECT'; name: 'users_set_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'users_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'users_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'users_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'users_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'users_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'users_update_column': { name: 'users_update_column'; enumValues: 'id' | 'username'; };
    'users_updates': { kind: 'INPUT_OBJECT'; name: 'users_updates'; isOneOf: false; inputFields: [{ name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'users_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'users_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'uuid': unknown;
    'uuid_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'uuid_comparison_exp'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; }; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'uuid'; ofType: null; }; }; }; defaultValue: null }]; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: 'spectra';
  query: 'query_root';
  mutation: 'mutation_root';
  subscription: 'subscription_root';
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';
